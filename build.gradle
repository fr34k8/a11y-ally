buildscript {
    project.ext.KOTLIN_VERSION = '1.3.11'

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.android.tools.lint:lint-gradle:26.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
    }
}

plugins {
    id 'com.github.triplet.play' version '2.0.0'
    id 'com.quittle.android-emulator' version '0.0.1'
    id 'com.quittle.setup-android-sdk' version '0.1.0'
    id 'com.quittle.svg-2-android-vector' version '0.0.3'
    id 'com.vanniktech.code.quality.tools' version '0.13.0'

}

final boolean IS_IN_TRAVIS = 'true' == System.getenv('TRAVIS')

repositories {
    google()
    jcenter()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    final String androidSigningPassword = System.getenv('ANDROID_SIGNING_PASSWORD')
    signingConfigs {
        if (androidSigningPassword) {
            release {
                storeFile file('config/a11y-ally-release.jks')
                storePassword androidSigningPassword
                keyPassword androidSigningPassword
                keyAlias 'a11y-ally-release-11/11/18'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')

            if (androidSigningPassword) {
                signingConfig signingConfigs.release
            } else {
                signingConfig debug.signingConfig
            }
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28

        buildConfigField('@androidx.annotation.NonNull String', 'TAG', '"A11yAlly"')
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
        disable 'GradleDependency', 'AllowBackup', 'GoogleAppIndexingWarning'
        // Temporary while SVG 2 Android Vector plugin does not hide the SVGs from the linter
        disable 'UnusedResources'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$KOTLIN_VERSION"
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.ext:junit:1.0.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
}

play {
    serviceAccountCredentials = file('config/a11y-ally-app-publisher@api-7302096083209403391-613431.iam.gserviceaccount.com.json')
    defaultToAppBundles = true
    track = 'alpha'
    resolutionStrategy = 'auto'
    outputProcessor {
        versionNameOverride = "$versionNameOverride.$versionCode"
    }
}

codeQualityTools {
    htmlReports true
    xmlReports false

    detekt {
        config = 'config/detekt-config.yml'
    }

    findbugs {
        enabled = false // Fails the build without java input
        excludeFilter = 'config/findbugs-exclude-filter.xml'
    }
}

if (IS_IN_TRAVIS) {
    defaultTasks 'assemble', 'bundle', 'test', 'check'
} else {
    defaultTasks 'assemble', 'bundle', 'test', 'check', 'connectedCheck'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:all'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        allWarningsAsErrors = true
    }
}
